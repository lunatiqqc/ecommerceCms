openapi: 3.0.1
info:
  title: 'ecommerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
servers:
  - url: http://localhost:5059
paths:
  /api/Pages:
    post:
      tags:
        - Pages
      operationId: Pages_Post
      parameters:
        - name: title
          in: query
          schema:
            type: string
        - name: parentId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
    get:
      tags:
        - Pages
      operationId: Pages_Get
      parameters:
        - name: url
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
  /api/Pages/all:
    get:
      tags:
        - Pages
      operationId: Pages_GetAll
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
  '/api/Pages/{id}':
    put:
      tags:
        - Pages
      operationId: Pages_Put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
          text/json:
            schema:
              $ref: '#/components/schemas/Page'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Page'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Pages
      operationId: Pages_Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Products:
    post:
      tags:
        - Products
      operationId: Products_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    get:
      tags:
        - Products
      operationId: Products_Get
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  '/api/Products/{id}':
    delete:
      tags:
        - Products
      operationId: Products_Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
components:
  schemas:
    Component:
      required:
        - $discriminator
      type: object
      properties:
        $discriminator:
          type: string
        id:
          type: integer
          format: int32
      additionalProperties: false
      discriminator:
        propertyName: $discriminator
    GridColumn:
      type: object
      properties:
        id:
          type: integer
          format: int32
        columnStart:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        component:
          oneOf:
            - $ref: '#/components/schemas/TextComponent'
            - $ref: '#/components/schemas/ImageComponent'
          nullable: true
      additionalProperties: false
    GridRow:
      type: object
      properties:
        id:
          type: integer
          format: int32
        columns:
          type: array
          items:
            $ref: '#/components/schemas/GridColumn'
          nullable: true
      additionalProperties: false
    ImageComponent:
      type: object
      allOf:
        - $ref: '#/components/schemas/Component'
      properties:
        imageUrl:
          type: string
          nullable: true
      additionalProperties: false
    Page:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Page'
          nullable: true
        visibleInMenu:
          type: boolean
          nullable: true
        requiredRole:
          $ref: '#/components/schemas/UserRoles'
        gridRows:
          type: array
          items:
            $ref: '#/components/schemas/GridRow'
          nullable: true
      additionalProperties: false
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        stockQuantity:
          type: integer
          format: int32
          nullable: true
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        productFields:
          type: array
          items:
            $ref: '#/components/schemas/ProductField'
          nullable: true
      additionalProperties: false
    ProductCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          nullable: true
      additionalProperties: false
    ProductField:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        fieldType:
          type: string
          nullable: true
        isEnabled:
          type: boolean
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    TextComponent:
      type: object
      allOf:
        - $ref: '#/components/schemas/Component'
      properties:
        text:
          type: string
          nullable: true
      additionalProperties: false
    UserRoles:
      enum:
        - 0
      type: integer
      format: int32
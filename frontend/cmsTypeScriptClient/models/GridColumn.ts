/* tslint:disable */
/* eslint-disable */
/**
 * ecommerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GridColumnComponent } from './GridColumnComponent';
import {
    GridColumnComponentFromJSON,
    GridColumnComponentFromJSONTyped,
    GridColumnComponentToJSON,
} from './GridColumnComponent';
import type { GridRow } from './GridRow';
import {
    GridRowFromJSON,
    GridRowFromJSONTyped,
    GridRowToJSON,
} from './GridRow';

/**
 * 
 * @export
 * @interface GridColumn
 */
export interface GridColumn {
    /**
     * 
     * @type {number}
     * @memberof GridColumn
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof GridColumn
     */
    columnStart?: number;
    /**
     * 
     * @type {number}
     * @memberof GridColumn
     */
    width?: number;
    /**
     * 
     * @type {GridColumnComponent}
     * @memberof GridColumn
     */
    component?: GridColumnComponent | null;
    /**
     * 
     * @type {Array<GridRow>}
     * @memberof GridColumn
     */
    gridRows?: Array<GridRow> | null;
}

/**
 * Check if a given object implements the GridColumn interface.
 */
export function instanceOfGridColumn(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GridColumnFromJSON(json: any): GridColumn {
    return GridColumnFromJSONTyped(json, false);
}

export function GridColumnFromJSONTyped(json: any, ignoreDiscriminator: boolean): GridColumn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'columnStart': !exists(json, 'columnStart') ? undefined : json['columnStart'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'component': !exists(json, 'component') ? undefined : GridColumnComponentFromJSON(json['component']),
        'gridRows': !exists(json, 'gridRows') ? undefined : (json['gridRows'] === null ? null : (json['gridRows'] as Array<any>).map(GridRowFromJSON)),
    };
}

export function GridColumnToJSON(value?: GridColumn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'columnStart': value.columnStart,
        'width': value.width,
        'component': GridColumnComponentToJSON(value.component),
        'gridRows': value.gridRows === undefined ? undefined : (value.gridRows === null ? null : (value.gridRows as Array<any>).map(GridRowToJSON)),
    };
}


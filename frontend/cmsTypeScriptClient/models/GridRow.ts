/* tslint:disable */
/* eslint-disable */
/**
 * ecommerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GridColumn } from './GridColumn';
import {
    GridColumnFromJSON,
    GridColumnFromJSONTyped,
    GridColumnToJSON,
} from './GridColumn';

/**
 * 
 * @export
 * @interface GridRow
 */
export interface GridRow {
    /**
     * 
     * @type {number}
     * @memberof GridRow
     */
    id?: number;
    /**
     * 
     * @type {Array<GridColumn>}
     * @memberof GridRow
     */
    columns?: Array<GridColumn> | null;
}

/**
 * Check if a given object implements the GridRow interface.
 */
export function instanceOfGridRow(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GridRowFromJSON(json: any): GridRow {
    return GridRowFromJSONTyped(json, false);
}

export function GridRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): GridRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'columns': !exists(json, 'columns') ? undefined : (json['columns'] === null ? null : (json['columns'] as Array<any>).map(GridColumnFromJSON)),
    };
}

export function GridRowToJSON(value?: GridRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'columns': value.columns === undefined ? undefined : (value.columns === null ? null : (value.columns as Array<any>).map(GridColumnToJSON)),
    };
}


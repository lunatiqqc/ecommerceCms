/* tslint:disable */
/* eslint-disable */
/**
 * ecommerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductField
 */
export interface ProductField {
    /**
     * 
     * @type {number}
     * @memberof ProductField
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProductField
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductField
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductField
     */
    fieldType?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProductField
     */
    isEnabled?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ProductField
     */
    value?: string | null;
}

/**
 * Check if a given object implements the ProductField interface.
 */
export function instanceOfProductField(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductFieldFromJSON(json: any): ProductField {
    return ProductFieldFromJSONTyped(json, false);
}

export function ProductFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'fieldType': !exists(json, 'fieldType') ? undefined : json['fieldType'],
        'isEnabled': !exists(json, 'isEnabled') ? undefined : json['isEnabled'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function ProductFieldToJSON(value?: ProductField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'fieldType': value.fieldType,
        'isEnabled': value.isEnabled,
        'value': value.value,
    };
}


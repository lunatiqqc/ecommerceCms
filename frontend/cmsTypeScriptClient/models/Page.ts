/* tslint:disable */
/* eslint-disable */
/**
 * ecommerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GridRow } from './GridRow';
import {
    GridRowFromJSON,
    GridRowFromJSONTyped,
    GridRowToJSON,
} from './GridRow';
import type { UserRoles } from './UserRoles';
import {
    UserRolesFromJSON,
    UserRolesFromJSONTyped,
    UserRolesToJSON,
} from './UserRoles';

/**
 * 
 * @export
 * @interface Page
 */
export interface Page {
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Page
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Page
     */
    url?: string | null;
    /**
     * 
     * @type {Array<Page>}
     * @memberof Page
     */
    children?: Array<Page> | null;
    /**
     * 
     * @type {boolean}
     * @memberof Page
     */
    visibleInMenu?: boolean | null;
    /**
     * 
     * @type {UserRoles}
     * @memberof Page
     */
    requiredRole?: UserRoles;
    /**
     * 
     * @type {Array<GridRow>}
     * @memberof Page
     */
    gridRows?: Array<GridRow> | null;
}

/**
 * Check if a given object implements the Page interface.
 */
export function instanceOfPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PageFromJSON(json: any): Page {
    return PageFromJSONTyped(json, false);
}

export function PageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Page {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'children': !exists(json, 'children') ? undefined : (json['children'] === null ? null : (json['children'] as Array<any>).map(PageFromJSON)),
        'visibleInMenu': !exists(json, 'visibleInMenu') ? undefined : json['visibleInMenu'],
        'requiredRole': !exists(json, 'requiredRole') ? undefined : UserRolesFromJSON(json['requiredRole']),
        'gridRows': !exists(json, 'gridRows') ? undefined : (json['gridRows'] === null ? null : (json['gridRows'] as Array<any>).map(GridRowFromJSON)),
    };
}

export function PageToJSON(value?: Page | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'url': value.url,
        'children': value.children === undefined ? undefined : (value.children === null ? null : (value.children as Array<any>).map(PageToJSON)),
        'visibleInMenu': value.visibleInMenu,
        'requiredRole': UserRolesToJSON(value.requiredRole),
        'gridRows': value.gridRows === undefined ? undefined : (value.gridRows === null ? null : (value.gridRows as Array<any>).map(GridRowToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ecommerce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     ImageComponentFromJSONTyped,
     TextComponentFromJSONTyped
} from './';

/**
 * 
 * @export
 * @interface Component
 */
export interface Component {
    /**
     * 
     * @type {string}
     * @memberof Component
     */
    discriminator: string;
    /**
     * 
     * @type {number}
     * @memberof Component
     */
    id?: number;
}

/**
 * Check if a given object implements the Component interface.
 */
export function instanceOfComponent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "discriminator" in value;

    return isInstance;
}

export function ComponentFromJSON(json: any): Component {
    return ComponentFromJSONTyped(json, false);
}

export function ComponentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Component {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['discriminator'] === 'ImageComponent') {
            return ImageComponentFromJSONTyped(json, true);
        }
        if (json['discriminator'] === 'TextComponent') {
            return TextComponentFromJSONTyped(json, true);
        }
    }
    return {
        
        'discriminator': json['discriminator'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function ComponentToJSON(value?: Component | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discriminator': value.discriminator,
        'id': value.id,
    };
}

